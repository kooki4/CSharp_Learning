// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BedeAutomationTask
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Project Library Manager", Description="      In order to perform CRUD operations on the library\r\n      As a Library Mana" +
        "ger\r\n      I want to be able to Create, Update, Delete, and List library content" +
        "", SourceFile="LibraryTest.feature", SourceLine=0)]
    public partial class ProjectLibraryManagerFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LibraryTest.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Project Library Manager", "      In order to perform CRUD operations on the library\r\n      As a Library Mana" +
                    "ger\r\n      I want to be able to Create, Update, Delete, and List library content" +
                    "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add a new book to the library and verify it.", SourceLine=5)]
        public virtual void AddANewBookToTheLibraryAndVerifyIt_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a new book to the library and verify it.", ((string[])(null)));
#line 6
  this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "id",
                        "1"});
            table1.AddRow(new string[] {
                        "Title",
                        "Test"});
            table1.AddRow(new string[] {
                        "Description",
                        "Test Description"});
            table1.AddRow(new string[] {
                        "Author",
                        "Test Author 1"});
#line 7
      testRunner.Given("the following book data", ((string)(null)), table1, "Given ");
#line 13
      testRunner.When("the library manager posts the book data to the website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
      testRunner.Then("a positive status should be returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
      testRunner.When("the library manager gets the project by id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
      testRunner.Then("the saved book data matches the posted one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion


